// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PoC.EF.EnumTable;

#nullable disable

namespace PoC.EF.EnumTable.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240710083337_AddedDiscardedStatus")]
    partial class AddedDiscardedStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PoC.EF.EnumTable.Status", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Description = "None"
                        },
                        new
                        {
                            Id = 1,
                            Description = "Created"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Completed"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Discarded"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
